user nginx;
worker_processes auto;

worker_rlimit_nofile 8192;
events {
  worker_connections 2048;
  multi_accept on;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 65;

  # アップストリーム（同一ネットワーク内なので ports: 不要）
  upstream fe {
    server frontend:3000;
  }
  upstream be {
    server backend:8080;
  }
  upstream jaeger {
    server jaeger:16686;
  }

  server {
    listen 80;

    # ヘルスチェック
    location = /health-check {
      return 200 "ok\n";
      add_header Content-Type text/plain;
    }

    # APIはバックエンドへ
    location /api/ {
      proxy_pass http://be;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /jaeger/ {
      proxy_pass http://jaeger;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # それ以外はフロントへ
    location / {
      proxy_pass http://fe;
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

  }

  log_format ltsv "time:$time_local"
  "\thost:$remote_addr"
  "\tforwardedfor:$http_x_forwarded_for"
  "\treq:$request"
  "\tstatus:$status"
  "\tmethod:$request_method"
  "\turi:$request_uri"
  "\tsize:$body_bytes_sent"
  "\treferer:$http_referer"
  "\tua:$http_user_agent"
  "\treqtime:$request_time"
  "\tcache:$upstream_http_x_cache"
  "\truntime:$upstream_http_x_runtime"
  "\tapptime:$upstream_response_time"
  "\tvhost:$host";
  access_log /var/log/nginx/access.log ltsv;
}